alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
# First you will move to a namespace with 'kns bss-prodtest'
alias kns='kubectl config set-context --current --namespace'

# Then all kubectl commands will be run in that ns.
alias k='kubectl'
alias kg='kubectl get'               # Easy to use with autocomplete so 'kg conf' and hitting TAB will expand to 'kg configmap'
alias kgcf='kubectl get configmap'
alias kgd='kubectl get deploy'
alias kgds='kubectl get daemonset'
alias kgp='kubectl get pods'
alias kwp='watch kubectl get pods'
alias kgs='kubectl get secret'
alias kgss='kubectl get statefulset'
# In zsh, these all work with autocomplete so typing `kgd ing` and hitting TAB will expand to `kgd ingress`
alias kgcn='kubectl get configmap -n'
alias kgdn='kubectl get deploy -n'
alias kgdsn='kubectl get daemonset -n'
alias kgpn='kubectl get pods -n'
alias kwpn='watch kubectl get pods -n'
alias kgsn='kubectl get secret -n'
alias kgssn='kubectl get statefulset -n'
alias wkev='watch "kubectl get events --sort-by .lastTimestamp | tail -n 20"'
alias kev='kubectl get events --sort-by .lastTimestamp'
alias kne='k get nodes --selector karpenter.sh/provisioner-name=ephemeral'
alias knd='k get nodes --selector karpenter.sh/provisioner-name=default'
alias knc='k get nodes --selector karpenter.sh/provisioner-name=confluent'
alias kpfargo='k port-forward service/argocd-server -n argocd 8080:443'
alias karpp='kubectl -n karpenter get provisioner -o custom-columns="NAME:.metadata.name,CPU-PROVISIONED:.status.resources.cpu,CPU-LIMIT:.spec.limits.resources.cpu,MEM-PROVISIONED:.status.resources.memory,MEM-LIMIT:.spec.limits.resources.memory,POD-COUNT:.status.resources.pods"'
# Terraform
alias tf='terraform'

#Ansible
alias ap='ansible-playbook'
alias api='ansible-playbook -i'
alias ai='ansible-inventory'
alias av='ansible-vault'
alias avv='ansible-vault view'
alias ave='ansible-vault edit'

#aws
alias mfa='source ~/gettoken.sh'
alias asc='aws ssm start-session --target'
alias asm='_asm(){ aws ssm start-session --target=$(aws ec2 describe-instances --filter "Name=tag:Name,Values=[$1]" --query "Reservations[].Instances[].InstanceId" --output text)}; _asm'
alias aecd='_aecd(){ aws ec2 describe-instances --filter "Name=tag:Name,Values=[$1]" --query "Reservations[].Instances[].InstanceId"}; _aecd'

# lima/nerdctl for arm64 arch
alias docker='lima nerdctl'
alias lmctl='limactl'
alias pols='policy_sentry'
alias knit='k get nodes -o json | jq -r ".items | .[] | .metadata | .labels | .[node.kubernetes.io/instance-type]"'

# proxy
alias spp='export https_proxy=http://127.0.0.1:11110; export http_proxy=http://127.0.0.1:11110'
alias usp='unset http_proxy https_proxy ftp_proxy'
alias cpwdev='security find-generic-password -a jzieche -s idm -w | pbcopy'
alias cpwprod='security find-generic-password -a jzieche -s idm-prod -w | pbcopy'
alias kdn='kubectl describe node'
