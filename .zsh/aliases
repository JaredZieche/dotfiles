alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
# First you will move to a namespace with 'kns bss-prodtest'
alias kns='kubectl config set-context --current --namespace'

# Then all kubectl commands will be run in that ns.
alias k='kubectl'
alias kg='kubectl get'               # Easy to use with autocomplete so 'kg conf' and hitting TAB will expand to 'kg configmap'
alias kgcf='kubectl get configmap'
alias kgd='kubectl get deploy'
alias kgds='kubectl get daemonset'
alias kgp='kubectl get pods'
alias kwp='watch kubectl get pods'
alias kgs='kubectl get secret'
alias kgss='kubectl get statefulset'
# In zsh, these all work with autocomplete so typing `kgd ing` and hitting TAB will expand to `kgd ingress`
alias kgcn='kubectl get configmap -n'
alias kgdn='kubectl get deploy -n'
alias kgdsn='kubectl get daemonset -n'
alias kgpn='kubectl get pods -n'
alias kwpn='watch kubectl get pods -n'
alias kgsn='kubectl get secret -n'
alias kgssn='kubectl get statefulset -n'
alias wkev='watch "kubectl get events --sort-by .lastTimestamp | tail -n 20"'
alias kev='kubectl get events --sort-by .lastTimestamp'
alias kne='k get nodes --selector karpenter.sh/provisioner-name=ephemeral'
alias knd='k get nodes --selector karpenter.sh/provisioner-name=default'
alias knc='k get nodes --selector karpenter.sh/provisioner-name=confluent'
# Terraform
alias tf='terraform'

#Ansible
alias ap='ansible-playbook'
alias api='ansible-playbook -i'
alias ai='ansible-inventory'
alias av='ansible-vault'
alias avv='ansible-vault view'
alias ave='ansible-vault edit'

#aws
alias mfa='source ~/gettoken.sh'
alias asc='aws ssm start-session --target'
alias asm='_asm(){ aws ssm start-session --target=$(aws ec2 describe-instances --filter "Name=tag:Name,Values=[$1]" --query "Reservations[].Instances[].InstanceId" --output text)}; _asm'
alias ecrlogin='aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.us-east-1.amazonaws.com'
alias ecrpush='_ecrpush(){ docker push "$(aws sts get-caller-identity --query Account --output text)".dkr.ecr.us-gov-west-1.amazonaws.com/"$1"}; _ecrpush'
alias ecrpull='_ecrpull(){ docker pull "$(aws sts get-caller-identity --query Account --output text)".dkr.ecr.us-gov-west-1.amazonaws.com/"$1"}; _ecrpull'
alias adfslog='_adfslog(){ aws-adfs login --adfs-host=prod.adfs.federation.va.gov --provider-id urn:amazon:webservices:govcloud --region us-gov-west-1 --no-ssl-verification --assertfile ~/.aws/assertb64 --profile "$1"}; _adfslog'
alias aecd='_aecd(){ aws ec2 describe-instances --filter "Name=tag:Name,Values=[$1]" --query "Reservations[].Instances[].InstanceId"}; _aecd'

#IPA
alias ipajoin='_ipajoin(){ ipa-client-install --domain="$1".bip.va.gov --realm="$1^^".BIP.VA.GOV -p $2 -W --server=idm."$1".bip.va.gov --force-join --mkhomedir }'

#Build harness
alias bhiamp='_bhiamp(){ docker run -e "ENV=$3" --rm -it -v ~/.git-credentials:/root/.git-credentials -v "$HOME/.aws":/root/.aws/ -v $(pwd):/src/ "$1".dkr.ecr.us-gov-west-1.amazonaws.com/bip/build-harness:2022-03-04.1 $2 $3 $4 }; _bhiamp'
alias bhiama='_bhiama(){ docker run --rm -it -v ~/.git-credentials:/root/.git-credentials -v "$HOME/.aws":/root/.aws/ -v $(pwd):/src/ "$1".dkr.ecr.us-gov-west-1.amazonaws.com/bip/build-harness:2022-03-04.1 $2 $3 }; _bhiama'

# lima/nerdctl for arm64 arch
alias docker='lima nerdctl'
alias lmctl='limactl'
